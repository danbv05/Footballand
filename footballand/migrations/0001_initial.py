# Generated by Django 4.2.4 on 2023-08-07 00:37

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('bet_tokens_amount', models.IntegerField(default=500)),
                ('prize_vouchers_amount', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Footballteam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='FC Barcelona', max_length=500)),
                ('symbol', models.ImageField(default='https://loremflickr.com/cache/resized/3849_14857076316_4e420c7870_n_320_240_nofilter.jpg', upload_to='teams_symbols')),
                ('table_position', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='FC Barcelona', max_length=500)),
                ('country', models.CharField(default='FC Barcelona', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Prize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('image', models.ImageField(default='https://loremflickr.com/cache/resized/3849_14857076316_4e420c7870_n_320_240_nofilter.jpg', upload_to='prizes_images')),
                ('price', models.IntegerField(default=100)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Match date: ')),
                ('win_ratio_team_1', models.FloatField(default=1)),
                ('win_ratio_team_2', models.FloatField(default=1)),
                ('draw_ratio', models.FloatField(default=1)),
                ('draw_bets', models.ManyToManyField(blank=True, related_name='draw', to=settings.AUTH_USER_MODEL)),
                ('team_1', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='team_1', to='footballand.footballteam')),
                ('team_2', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='match_2', to='footballand.footballteam')),
            ],
        ),
        migrations.AddField(
            model_name='footballteam',
            name='league',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='footballand.league'),
        ),
        migrations.CreateModel(
            name='Bet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction', models.CharField(choices=[('1', 'Outcome 1'), ('2', 'Outcome 2'), ('X', 'Draw')], max_length=1)),
                ('tokens', models.IntegerField(default=1)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='footballand.match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
